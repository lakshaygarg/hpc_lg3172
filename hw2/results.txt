Q1 - Fixed initialization in val_test02
   - Fixed indexing and delete->free in val_test01

Q2 - Results are almost twice as fast for blocked version with BLOCK_SIZE=64
OpenMP has similar performance as blocked version. Even though my cache is 320KB in my system, 
I am not sure why 64*64*8 = 32KB of data works the best. One possibility is that I am using WSL and only 32KB cache is allocated.
Results with Blocked and OpenMP is almost 5 times as fast.

Results for Vanilla version
Dimension       Time    Gflop/s       GB/s        Error
        64   0.083600  23.925332  47.850665 0.000000e+00
       128   0.105507  18.962565  37.925130 0.000000e+00
       192   0.100929  19.916173  39.832345 0.000000e+00
       256   0.114823  17.533599  35.067199 0.000000e+00
       320   0.141623  14.345198  28.690395 0.000000e+00
       384   0.130951  15.566424  31.132848 0.000000e+00
       448   0.140082  15.405038  30.810077 0.000000e+00
       512   0.146508  14.657755  29.315509 0.000000e+00
       576   0.170318  13.464406  26.928813 0.000000e+00
       640   0.162855  12.877447  25.754894 0.000000e+00
       704   0.153956  13.597901  27.195803 0.000000e+00
       768   0.224251  12.119967  24.239933 0.000000e+00
       832   0.440495   5.229847  10.459695 0.000000e+00
       896   0.394836   7.287310  14.574620 0.000000e+00
       960   0.380738   9.294951  18.589902 0.000000e+00
      1024   0.262869   8.169398  16.338795 0.000000e+00
      1088   0.321944   8.000843  16.001687 0.000000e+00
      1152   0.400721   7.630366  15.260731 0.000000e+00
      1216   0.504498   7.128058  14.256116 0.000000e+00
      1280   0.628948   6.668765  13.337530 0.000000e+00
      1344   0.732865   6.625271  13.250541 0.000000e+00
      1408   0.885965   6.301171  12.602342 0.000000e+00
      1472   1.596782   3.994917   7.989835 0.000000e+00
      1536   1.824631   3.972177   7.944355 0.000000e+00
      1600   1.434353   5.711287  11.422573 0.000000e+00
      1664   1.637052   5.628950  11.257899 0.000000e+00
      1728   2.093687   4.928894   9.857789 0.000000e+00
      1792   2.408970   4.777632   9.555264 0.000000e+00
      1856   2.763521   4.627017   9.254035 0.000000e+00
      1920   3.103228   4.561629   9.123258 0.000000e+00
      1984   3.373960   4.629297   9.258594 0.000000e+00

Results for Blocked version at BLOCK_SIZE=64 (got the best results) //Implemented
Dimension       Time    Gflop/s       GB/s        Error
        64   0.098159  20.376717  40.753435 0.000000e+00
       128   0.134822  14.839388  29.678777 0.000000e+00
       192   0.100178  20.065442  40.130883 0.000000e+00
       256   0.161281  12.482951  24.965902 0.000000e+00
       320   0.107927  18.823927  37.647854 0.000000e+00
       384   0.153866  13.248085  26.496170 0.000000e+00
       448   0.135794  15.891536  31.783072 0.000000e+00
       512   0.185653  11.567190  23.134380 0.000000e+00
       576   0.130619  17.556701  35.113403 0.000000e+00
       640   0.166412  12.602186  25.204373 0.000000e+00
       704   0.121923  17.170533  34.341065 0.000000e+00
       768   0.219454  12.384859  24.769718 0.000000e+00
       832   0.154013  14.957921  29.915841 0.000000e+00
       896   0.225736  12.746257  25.492513 0.000000e+00
       960   0.206734  17.118384  34.236768 0.000000e+00
      1024   0.189634  11.324347  22.648693 0.000000e+00
      1088   0.154252  16.698873  33.397745 0.000000e+00
      1152   0.239699  12.756196  25.512391 0.000000e+00
      1216   0.215184  16.711669  33.423338 0.000000e+00
      1280   0.336716  12.456503  24.913007 0.000000e+00
      1344   0.284549  17.063597  34.127194 0.000000e+00
      1408   0.436471  12.790359  25.580717 0.000000e+00
      1472   0.377915  16.879484  33.758967 0.000000e+00
      1536   0.620464  11.681186  23.362373 0.000000e+00
      1600   0.492885  16.620495  33.240989 0.000000e+00
      1664   1.102786   8.356002  16.712005 0.000000e+00
      1728   0.694209  14.865206  29.730412 0.000000e+00
      1792   1.204455   9.555499  19.110998 0.000000e+00
      1856   0.921104  13.882096  27.764193 0.000000e+00
      1920   1.326880  10.668465  21.336931 0.000000e+00
      1984   1.491844  10.469637  20.939273 0.000000e+00

Results with OpenMP //Implemented
Dimension       Time    Gflop/s       GB/s        Error
        64   2.406796   0.831046   1.662093 0.000000e+00
       128   0.967400   2.068103   4.136207 0.000000e+00
       192   0.795030   2.528358   5.056717 0.000000e+00
       256   0.502478   4.006672   8.013343 0.000000e+00
       320   0.402542   5.046971  10.093941 0.000000e+00
       384   0.341122   5.975662  11.951323 0.000000e+00
       448   0.312825   6.898322  13.796644 0.000000e+00
       512   0.271960   7.896324  15.792648 0.000000e+00
       576   0.272506   8.415373  16.830746 0.000000e+00
       640   0.228131   9.192740  18.385480 0.000000e+00
       704   0.227564   9.199518  18.399037 0.000000e+00
       768   0.336474   8.077610  16.155221 0.000000e+00
       832   0.290482   7.930674  15.861348 0.000000e+00
       896   0.288388   9.977141  19.954282 0.000000e+00
       960   0.475044   7.449718  14.899436 0.000000e+00
      1024   0.235416   9.122075  18.244151 0.000000e+00
      1088   0.243989  10.557157  21.114314 0.000000e+00
      1152   0.298169  10.254741  20.509483 0.000000e+00
      1216   0.414466   8.676451  17.352902 0.000000e+00
      1280   0.383361  10.940869  21.881739 0.000000e+00
      1344   0.503129   9.650463  19.300927 0.000000e+00
      1408   0.725122   7.698873  15.397745 0.000000e+00
      1472   0.649348   9.823719  19.647439 0.000000e+00
      1536   0.654354  11.076209  22.152417 0.000000e+00
      1600   1.042177   7.860465  15.720931 0.000000e+00
      1664   0.975871   9.442734  18.885468 0.000000e+00
      1728   1.030229  10.016761  20.033523 0.000000e+00
      1792   1.070715  10.749049  21.498098 0.000000e+00
      1856   1.350502   9.468227  18.936455 0.000000e+00
      1920   1.379155  10.264094  20.528189 0.000000e+00
      1984   1.545927  10.103367  20.206735 0.000000e+00

Results with openmp and Blocked version //implemented
Dimension       Time    Gflop/s       GB/s        Error
        64   0.144287  13.862349  27.724697 0.000000e+00
       128   0.233082   8.583601  17.167202 0.000000e+00
       192   0.085487  23.513645  47.027289 0.000000e+00
       256   0.063657  31.626957  63.253914 0.000000e+00
       320   0.046822  43.389993  86.779985 0.000000e+00
       384   0.095758  21.287362  42.574724 0.000000e+00
       448   0.040138  53.763454 107.526908 0.000000e+00
       512   0.042386  50.664468 101.328936 0.000000e+00
       576   0.051753  44.311435  88.622871 0.000000e+00
       640   0.054832  38.246558  76.493115 0.000000e+00
       704   0.045720  45.789523  91.579046 0.000000e+00
       768   0.082316  33.017979  66.035958 0.000000e+00
       832   0.051405  44.815328  89.630655 0.000000e+00
       896   0.063748  45.135491  90.270982 0.000000e+00
       960   0.073884  47.898354  95.796707 0.000000e+00
      1024   0.057815  37.144137  74.288273 0.000000e+00
      1088   0.061674  41.765538  83.531076 0.000000e+00
      1152   0.068712  44.499700  88.999399 0.000000e+00
      1216   0.073774  48.744933  97.489866 0.000000e+00
      1280   0.099485  42.160357  84.320714 0.000000e+00
      1344   0.101600  47.789783  95.579566 0.000000e+00
      1408   0.125668  44.423446  88.846893 0.000000e+00
      1472   0.134605  47.390638  94.781275 0.000000e+00
      1536   0.179668  40.339614  80.679228 0.000000e+00
      1600   0.209880  39.031883  78.063766 0.000000e+00
      1664   0.223734  41.186748  82.373496 0.000000e+00
      1728   0.236715  43.594912  87.189824 0.000000e+00
      1792   0.285349  40.333627  80.667255 0.000000e+00
      1856   0.297375  42.999115  85.998230 0.000000e+00
      1920   0.360990  39.213776  78.427553 0.000000e+00
      1984   0.369038  42.323764  84.647529 0.000000e+00

Q3 - Modified the sin4_intrin() function
Reference time: 0.0112
Taylor time:    0.8210      Error: 6.928125e-12
Intrin time:    0.0024      Error: 6.928125e-12 //implemented
Vector time:    0.0033      Error: 2.454130e-03

After modification runtime is almost 5 times faster

Q4(a) - Please run pipeline output file to see the output.
The run times for different loop unrolling - 
Run time for unroll_0 for factor of 2 is   1.789475
Run time for unroll_1 for factor of 2 is   1.044942
Run time for unroll_2 for factor of 2 is   1.003642
Run time for unroll_3 for factor of 2 is   0.988658
Run time for unroll_4 for factor of 2 is   0.942383
Run time for unroll_0 for factor of 4 is   1.253860
Run time for unroll_1 for factor of 4 is   0.800134
Run time for unroll_2 for factor of 4 is   0.974567
Run time for unroll_3 for factor of 4 is   0.803572
Run time for unroll_4 for factor of 4 is   0.827157

The factor of 4 performs slightly better than unrolling with factor of 2
and overall unrolling performs significantly better than unoptimized version
Keeping addition separate from multiplication improves the performance in both cases.
Additionally the vector size doesn't fit in cache.
